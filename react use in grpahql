npm install @apollo/client graphql

import React from 'react';
import { gql, useQuery } from "@apollo/client";

const GET_DATA = gql`
  query {
    getStudents {
      _id
      name
      age
      city
      pincode
    }
  }
`;

const About = () => {
  const { loading, data, error } = useQuery(GET_DATA);
  if (loading) return <p>Content is loading.....</p>;
  if (error) return <p>Something is error</p>;
  return (
    <div>
      <h1 className="text-red-600">Welcome to about page</h1>
      {data && data.getStudents.map((e) => (
        <div key={e._id}>
          <p>{e._id}</p>
          <p>{e.name}</p>
          <p>{e.age}</p>
          <p>{e.city}</p>
          <p>{e.pincode}</p>
        </div>
      ))}
    </div>
  );
};

export default About;



main.ts
-----------
import React from 'react';
import ReactDOM from 'react-dom/client';
import { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';
import {BrowserRouter} from 'react-router-dom';

import 'bootstrap/dist/js/bootstrap.bundle';
import 'bootstrap/dist/css/bootstrap.css';
import './style.sass';

import App from './App';
import reportWebVitals from './reportWebVitals';

const client = new ApolloClient({
  uri: 'http://localhost:3000/graphql',
  cache: new InMemoryCache()
})

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
 
  <React.StrictMode>
    <BrowserRouter>
    <ApolloProvider client={client}>
      <App />
    </ApolloProvider>
    </BrowserRouter>
  </React.StrictMode>
  
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();






